image:
  name: google/cloud-sdk
  entrypoint:
    - '/usr/bin/env'
    - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'

before_script:
  - gcloud --version
  - kubectl version --client=true
  - apt-get install -qqy unzip
  - curl -O https://releases.hashicorp.com/terraform/0.11.11/terraform_0.11.11_linux_amd64.zip
  - unzip terraform_0.11.11_linux_amd64.zip
  - install terraform /usr/local/bin/
  - terraform --version
  - curl -O https://storage.googleapis.com/kubernetes-helm/helm-v2.12.2-linux-amd64.tar.gz
  - tar -xzvf helm-v2.12.2-linux-amd64.tar.gz
  - install linux-amd64/tiller /usr/local/bin/
  - install linux-amd64/helm /usr/local/bin/
  - helm init --client-only
  - curl -O https://amazon-eks.s3-us-west-2.amazonaws.com/1.11.5/2018-12-06/bin/linux/amd64/aws-iam-authenticator
  - install aws-iam-authenticator /usr/local/bin/
  - curl -L -O https://github.com/terraform-providers/terraform-provider-helm/releases/download/v0.6.0/terraform-provider-helm_v0.6.0_linux_amd64.tar.gz
  - tar -xzvf terraform-provider-helm_v0.6.0_linux_amd64.tar.gz
  - mkdir -p ~/.terraform.d/plugins
  - install terraform-provider-helm_linux_amd64/terraform-provider-helm ~/.terraform.d/plugins/
  - mkdir -p ~/.gcp
  - echo $GCPCRED | base64 -d > ~/.gcp/k8s-hybrid-cloud-0f1ceb09cf2a.json
  - gcloud auth activate-service-account --key-file=/root/.gcp/k8s-hybrid-cloud-0f1ceb09cf2a.json
  - gcloud config set core/project k8s-hybrid-cloud
  - gcloud config set compute/region us-west1
  - gcloud config set compute/zone us-west1-a
  - gcloud container clusters list
  - terraform init

stages:
  - validate
  - plan
  - apply
  - destroy

validate:
  stage: validate
  script:
    - terraform validate

plan:
  stage: plan
  script:
    - terraform plan -out "planfile"
  dependencies:
    - validate
  artifacts:
    paths:
      - planfile

apply:
  stage: apply
  script:
    - terraform apply -input=false -auto-approve "planfile"
  dependencies:
    - plan
  cache:
    key: helm-cache
    paths:
      - /root/.helm
  artifacts:
    paths:
      - terraform.tfstate
      - kubeconfig_gke-hybrid-cloud
      - kubeconfig_eks-hybrid-cloud
    when: always
  when: manual
  
destroy:
  stage: destroy
  script:
    - terraform destroy -auto-approve
  dependencies:
    - apply
  cache:
    key: helm-cache
  artifacts:
    paths:
      - terraform.tfstate
      - terraform.tfstate.backup
    when: always
  when: manual